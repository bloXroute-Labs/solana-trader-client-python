version: 2.1
orbs:
  slack: circleci/slack@4.1
executors:
  bxpython:
    docker:
      - image: cimg/python:3.10.7
    environment:
      RUN_TRADES: false
      RUN_SLOW_STREAMS: false
    working_directory: ~/ws
jobs:
  init:
    executor: bxpython
    steps:
      - attach_workspace:
          at: ~/ws
      - checkout:
          path: solana-trader-client-python
      - restore_cache:
          key: deps-{{ checksum "~/ws/solana-trader-client-python/requirements.txt" }}
      - run:
          name: Install awscli
          command: |
            sudo apt update
            sudo apt install awscli
      - run:
          name: Install dependencies
          command: |
            cd ~/ws/solana-trader-client-python
            python -m virtualenv venv
            . venv/bin/activate
            pip install -r requirements.txt
            make environment-integration
      - save_cache:
          key: deps-{{ checksum "~/ws/solana-trader-client-python/requirements.txt" }}
          paths:
            - ~/ws/solana-trader-client-python/venv
      - persist_to_workspace:
          root: ~/ws
          paths:
            - solana-trader-client-python
  lint:
    executor: bxpython
    steps:
      - attach_workspace:
          at: ~/ws
      - run:
          name: lint
          command: |
            cd ~/ws/solana-trader-client-python
            . venv/bin/activate
            make lint
  unit:
    executor: bxpython
    steps:
      - attach_workspace:
          at: ~/ws
      - run:
          name: Unit test
          command: |
            cd ~/ws/solana-trader-client-python
            . venv/bin/activate
            make test
  testnet_examples:
    executor: bxpython
    steps:
      - attach_workspace:
          at: ~/ws
      - run:
          name: Testnet
          command: |
            unset PRIVATE_KEY
            cd ~/ws/solana-trader-client-python
            . venv/bin/activate
            API_ENV=testnet AUTH_HEADER=$AUTH_HEADER_TESTNET python example/provider/main.py
  mainnet_examples:
    executor: bxpython
    steps:
      - attach_workspace:
          at: ~/ws
      - run:
          name: Export build details
          command: |
            echo 'export COMMIT_HASH=$(git rev-parse HEAD)' >> $BASH_ENV
            echo 'export COMMIT_AUTHOR="$(git --no-pager log -1 --pretty=format:'%an')"' >> $BASH_ENV
            source $BASH_ENV
      - run:
          name: Mainnet
          command: |
            unset PRIVATE_KEY
            cd ~/ws/solana-trader-client-python
            . venv/bin/activate
            exit 1
            API_ENV=mainnet AUTH_HEADER=$AUTH_HEADER_MAINNET python example/provider/main.py
      - slack/notify:
#          branch_pattern: develop
          custom: |
            {
              "text": "solana-trader-client-python Build failed [develop]",
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "solana-trader-client-python Build failed",
                    "emoji": true
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "@here The latest merge seems to have broken builds.\n\nLast commit: <https://github.com/bloXroute-Labs/solana-trader-client-python/commit/$COMMIT_HASH|$COMMIT_HASH> \nAuthor: $COMMIT_AUTHOR"
                  },
                  "accessory": {
                    "type": "button",
                    "text": {
                      "type": "plain_text",
                      "text": "CircleCI",
                      "emoji": true
                    },
                    "url": "https://app.circleci.com/pipelines/github/bloXroute-Labs/solana-trader-client-python?branch=develop"
                  }
                }
              ]
            }
          event: fail
workflows:
  version: 2
  test-branch:
    jobs:
      - init:
          context:
            - circleci
      - lint:
          requires:
            - init
      - unit:
          requires:
            - init
      - testnet_examples:
          context: trader-api-sdk
          requires:
            - init
      - mainnet_examples:
          context:
            - trader-api-sdk
            - slack
          requires:
            - init
  nightly:
      triggers:
        - schedule:
            cron: "0 0 12 * *"
            filters:
              branches:
                only:
                  - develop
      jobs:
        - init:
            context:
              - circleci
        - unit:
            requires:
              - init
        - testnet_examples:
            context:
              - trader-api-sdk
            requires:
              - init
              - unit
        - mainnet_examples:
            context:
              - trader-api-sdk
              - slack
            requires:
              - init
              - unit
